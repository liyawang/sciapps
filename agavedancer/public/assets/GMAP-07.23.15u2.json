{
  "id": "GMAP-07.23.15u2",
  "name": "GMAP",
  "icon": null,
  "uuid": "7135625952982199835-e0bd34dffff8de6-0001-005",
  "parallelism": "SERIAL",
  "defaultProcessorsPerNode": 16,
  "defaultMemoryPerNode": 32,
  "defaultNodeCount": 1,
  "defaultMaxRunTime": "36:00:00",
  "defaultQueue": "normal",
  "version": "07.23.15",
  "revision": 2,
  "isPublic": true,
  "helpURI": "https://github.com/julian-gehring/GMAP-GSNAP",
  "label": "GMAP",
  "owner": "rogerab",
  "shortDescription": "Spliced alignment tool",
  "longDescription": "GMAP, a multithreaded, gapped mapper for ESTs",
  "tags": [
    "aligner",
    "NGS",
    "EST"
  ],
  "ontology": [],
  "executionType": "HPC",
  "executionSystem": "stampede.tacc.utexas.edu",
  "deploymentPath": "/api/v2/apps/GMAP-07.23.15u2.zip",
  "deploymentSystem": "data.iplantcollaborative.org",
  "templatePath": "gmap_wrapper2.sh",
  "testPath": "../test/gmap_wrapper_test.sh",
  "checkpointable": false,
  "lastModified": "2015-10-29T14:09:43.000-05:00",
  "modules": [
    "purge",
    "load TACC"
  ],
  "available": true,
  "inputs": [
    {
      "id": "sequence",
      "value": {
        "validator": "",
        "visible": true,
        "required": true,
        "order": 1,
        "enquote": false,
        "default": ""
      },
      "details": {
        "label": "sequence",
        "description": "sequence file in fasta format",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 1,
        "maxCardinality": 1,
        "ontology": [
          "http://sswapmeet.sswap.info/sequence/FASTA"
        ],
        "fileTypes": [
          "fasta-0"
        ]
      }
    },
    {
      "id": "reference",
      "value": {
        "validator": "",
        "visible": true,
        "required": false,
        "order": 2,
        "enquote": false,
        "default": ""
      },
      "details": {
        "label": "reference",
        "description": "Sequence file in fasta format",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "http://sswapmeet.sswap.info/sequence/FASTA"
        ],
        "fileTypes": [
          "fasta-0"
        ]
      }
    },
    {
      "id": "reference_data",
      "value": {
        "validator": "",
        "visible": true,
        "required": false,
        "order": 3,
        "enquote": false,
        "default": ""
      },
      "details": {
        "label": "reference indexes",
        "description": "Sequence file indexes",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "http://sswapmeet.sswap.info/sequence/FASTA"
        ],
        "fileTypes": [
          "fasta-0"
        ]
      }
    }
  ],
  "parameters": [
    {
      "id": "Output_type",
      "value": {
        "visible": true,
        "required": false,
        "type": "enumeration",
        "order": 1,
        "enquote": false,
        "default": "2",
        "enum_values": [
          {
            "1": "PSL (BLAT)"
          },
          {
            "2": "GFF3 gene"
          },
          {
            "3": "GFF3 cDNA_match"
          },
          {
            "4": "GFF3 EST_match"
          },
          {
            "5": "splicesites output"
          },
          {
            "6": "introns output"
          },
          {
            "sampe": "sam paired"
          },
          {
            "samse": "sam unpaired"
          }
        ]
      },
      "details": {
        "label": "Choose the format for the output file",
        "description": "Set the output format",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    },
    {
      "id": "cross_species",
      "value": {
        "visible": true,
        "required": false,
        "type": "enumeration",
        "order": 2,
        "enquote": false,
        "default": "",
        "enum_values": [
          {
            "": "normal mapping"
          },
          {
            "cross": "cross species"
          }
        ]
      },
      "details": {
        "label": "Turn on cross-species mapping, more sensitive",
        "description": "More sensitive mapping for cross-species studies",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    },
    {
      "id": "kmer",
      "value": {
        "visible": true,
        "required": false,
        "type": "string",
        "order": 3,
        "enquote": false,
        "default": "",
        "validator": ""
      },
      "details": {
        "label": "kmer size for indexing and alignment",
        "description": "16 or less",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    },
    {
      "id": "nPaths",
      "value": {
        "visible": true,
        "required": false,
        "type": "string",
        "order": 4,
        "enquote": false,
        "default": "",
        "validator": ""
      },
      "details": {
        "label": "Set the maximum number of paths to print",
        "description": "If set to 0, prints two paths if chimera detected, else one",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    },
    {
      "id": "indx",
      "value": {
        "visible": true,
        "required": false,
        "type": "string",
        "order": 5,
        "enquote": false,
        "default": "genome",
        "validator": ""
      },
      "details": {
        "label": "Name the genome index to be created",
        "description": "Name for the index/database used for mapping",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    },
    {
      "id": "no_splicing",
      "value": {
        "visible": true,
        "required": false,
        "type": "enumeration",
        "order": 7,
        "enquote": false,
        "default": "",
        "enum_values": [
          {
            "": "spliced mapping on"
          },
          {
            "NotSpliced": "spliced mapping off"
          }
        ]
      },
      "details": {
        "label": "Turn off spliced mapping",
        "description": " Useful for genome to genome alignments",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    },
    {
      "id": "subOptimal",
      "value": {
        "visible": true,
        "required": false,
        "type": "string",
        "order": 8,
        "enquote": false,
        "default": "",
        "validator": ""
      },
      "details": {
        "label": "Set range for acceptable hits",
        "description": "Report only paths whose score is within n of best path",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    },
    {
      "id": "readGroupID",
      "value": {
        "visible": true,
        "required": false,
        "type": "string",
        "order": 9,
        "enquote": false,
        "default": "",
        "validator": ""
      },
      "details": {
        "label": "Choose a read group ID for SAM header",
        "description": "ID for the read group library",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    },
    {
      "id": "readGroupName",
      "value": {
        "visible": true,
        "required": false,
        "type": "string",
        "order": 10,
        "enquote": false,
        "default": null,
        "validator": ""
      },
      "details": {
        "label": "Choose a read group name for the SAM header",
        "description": "Name for the read group",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    },
    {
      "id": "readGroupLibrary",
      "value": {
        "visible": true,
        "required": false,
        "type": "string",
        "order": 11,
        "enquote": false,
        "default": null,
        "validator": ""
      },
      "details": {
        "label": "Specify the read group library in the SAM header",
        "description": "Name for the read group library",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    },
    {
      "id": "readGroupPlatform",
      "value": {
        "visible": true,
        "required": false,
        "type": "string",
        "order": 12,
        "enquote": false,
        "default": "",
        "validator": ""
      },
      "details": {
        "label": "Set the read group platform for SAM header",
        "description": "Name the platform used for sequencing",
        "argument": null,
        "showArgument": false,
        "repeatArgument": false
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": [
          "xs:string"
        ]
      }
    }
  ],
  "outputs": [],
  "_links": {
    "self": {
      "href": "https://agave.iplantc.org/apps/v2/GMAP-07.23.15u2"
    },
    "executionSystem": {
      "href": "https://agave.iplantc.org/systems/v2/stampede.tacc.utexas.edu"
    },
    "storageSystem": {
      "href": "https://agave.iplantc.org/systems/v2/data.iplantcollaborative.org"
    },
    "history": {
      "href": "https://agave.iplantc.org/apps/v2/GMAP-07.23.15u2/history"
    },
    "metadata": {
      "href": "https://agave.iplantc.org/meta/v2/data/?q=%7B%22associationIds%22%3A%227135625952982199835-e0bd34dffff8de6-0001-005%22%7D"
    },
    "owner": {
      "href": "https://agave.iplantc.org/profiles/v2/rogerab"
    },
    "permissions": {
      "href": "https://agave.iplantc.org/apps/v2/GMAP-07.23.15u2/pems"
    }
  }
}
